                          Summary of Primary Commands        A       Assemble                M       Move memory        C       Call routine            N       Next addresses           D       Display memory          P       Pass points              E       Extended commands       Q       Query port               F       Fill memory             R       Read file(s)             G       Go                      S       Set memory               H       Hex arithmetic          T       Trace execution          I       Input line              U       Untrace execution        J       Full-screen trace       V       Verify memory            K       memory view blocK       X       eXamine registers        L       List code               Y       Search                               Press SPACE bar for more general help,                command letter for help on specific command, or                           ESCape key to exit help.                                Running DebugZDebugZ can be executed with or without command line parameters.All values in "[]" are optional, with an asterick "*" being theplace holder when only symbols are loaded (no program).        DEBUGZ  [program  [symbol]] [=addr]"program" is an optional program file (usually filename.COM);"symbol" is an optional symbol file (usually filename.SYM)."addr" is an optional base address to load DebugZ.  It must bepreceded by an equal sign ("="); default is to put DebugZ at thehighest location possible (just below DOS).                    Press SPACE bar for more general help,                command letter for help on specific command, or                    ESCape key to return to main help menu.                              Summary of NumbersLiteral Numbers: Default are hexadecimal values; any numbers        from 0-9 and letters A-F are accepted. (Ex: 0F0D 7A)Hexadecimal Numbers: Same as literal numbers; also, any        number preceded by "\" and "H" ("\H")  (Ex: \HE77)Decimal Numbers: Decimal numbers are preceded by either a "#"        sign or "\" and "D" ("\D"); digits from 0-9 are accepted.        (Ex: #9178 #31419 \D3712)Binary Numbers: Binary numbers are preceded by a "\" and "B"        ("\B"); digits from 0-1 are accepted. (Ex: \B11100110)                    Press SPACE bar for more general help,                command letter for help on specific command, or                    ESCape key to return to main help menu.                                 Other ValuesCharacters:  Any set of ASCII characters is accepted within        paired quotes, either ' or " (must be matching pair).        The rightmost char becomes the least significant;        a one character string has a zero high-order byte.        Case is not translated within quotes.        (Ex: "cd" 'y' 'T"' "'7'")Stack values:  Stack values are obtained with the dollar sign        ("$") symbol.  A sequence of n "$" obtains the n-th        stacked value in the current program.        (Ex: $ = top of stack   $$$ = 3rd value on stack)                    Press SPACE bar for more general help,                command letter for help on specific command, or                    ESCape key to return to main help menu.                               Symbol ReferencesA symbol is a sequence of ASCII characters ("sym") as read inby DebugZ.  Symbols are located in a .SYM symbol file.Valid symbol references are:    .sym        16-bit value of "sym"  (Ex: .MYSYM)    @sym        16-bit value POINTED TO by "sym" (Ex: @MYSYM)    =sym        8-bit value POINTED TO by "sym"  (Ex: =MYSYM)                    Press SPACE bar for more general help,                command letter for help on specific command, or                    ESCape key to return to main help menu.                                  ExpressionsAn expression is any collection of numbers, characters, valuesor symbol references separated by binary operators or the threeunary operators.  Note that overflow is NOT detected.Examples:       .MYSYM+#145*3                @(.MYSYM+14)/#71-^B0110                !+#4124Note that indirect references ("@" and "=") are valid using anyexpression in parenthesis.  The last example surfaces a thirdreference, "!", which uses the result from the *last* expression.Also, a leading "+" is implicitly preceded by a "!".                    Press SPACE bar for more general help,                command letter for help on specific command, or                    ESCape key to return to main help menu.                                   OperatorsDebugZ supports a wide range of unary and binary operators.The list of operators by precedence order and name are:Group A:  ~ (bitwise not)       ()  (pair of parenthesis)Group B:  @ (16-bit value)      = (8-bit value)Group C:  * (multiply)          / (divide)      % (modulo)Group D:  + (addition)          - (subtract)Group E:  & (bit AND)           | (bit OR)      ^ (bit XOR)Group A and B are unary operators.  "@" and "=" must befollowed by either a symbol name or expression inside parenthesis.  Groups C, D and E are binary operators.             Press command letter for help on specific command, or                    ESCape key to return to main help menu.Å             Press command letter for help on specific command, or                                                     AssembleAllows one to enter Z-80 assembly code; the assembly locationis shown on the left before each instruction.        As              Assemble at location "s"        A               Assemble starting at last assembly,                        listed, or traced address.        (Ex: A100)Enter lines of code followed by RETURN.  Entering a blankline or "." terminates assembly.             Press command letter for help on specific command, or                    ESCape key to return to main help menu.Å             Press command letter for help on specific command, or                                                     CallCall the subroutine without altering the CPU state of theprogram under test.        Cs              Call subroutine at location "s".        Cs,b            Call subroutine at location "s" with                        register BC set to value "b".        Cs,b,d          Same as above, except also set                        register pair DE to value "d".(Ex: C.SUB1    CEA03,#500,\B1010111010001101)             Press command letter for help on specific command, or                    ESCape key to return to main help menu.Å             Press command letter for help on specific co                                Display memory  Db     Display 12 lines starting at address "b".  Db,e   Display starting at "b", ending at "e".  Pauses for         for page breaks every 16 lines.  D      Display starting at address after last display.  D,e    Same, except ending at address "e".  DWb    Display words starting at address "b".  DWb,e  Display words starting at "b" and ending at "e".  DW     Display wors starting at address after last display.  DW,e   Same, except ending at address "e".  -D...  Disables pauses at end of each page (pagination)(Ex: D100,!+20    DW#4096)             Press command letter for help on specific command, or                    ESCape key to return to main help menu.Å             Press command letter fo                               Extended CommandsExtended commands direct the operation of DebugZ:    ERINTEL     Display (Intel) 8080 registers only    ER8080      Display (Intel) 8080 registers only    ERZ80       Display Z80 registers    EPRE        Pre-execution view of registers    EPOST       Post-execution view of registers    ETRACE      Trace all code (including DOS)   -ETRACE      Do not code that is < 0100H (no DOS trace)    E           Show current DebugZ status(NOTE: Only the first two characters of each E command is examined.)             Press command letter for help on specific command, or                    ESCape key to return to main help menu.Å             Press command letter for help on specific command, or                                              Fill memoryFill memory with specific 8-bit data:        Fb,e,d          Fill memory from location "b"                        through location "e" with data "d".(Ex: F155,.FOO+#50,'x')             Press command letter for help on specific command, or                    ESCape key to return to main help menu.Å             Press comm                                      GoGO executes a program with up to two breakpoints:        G       Execute from the current PC        G,b     Same as above with breakpoint at "b"        G,b,c   Same as above with additional breakpoint at "c"        Ga      Execute at address "a"        Ga,b    Same as above with breakpoint at "b"        Ga,b,c  Same as above with additional breakpoint at "c"        -G...   Disable the normal display of pass points        G,$     Break at value on bottom of stack (return address)(Ex: G100   G.START,3417,.ERR   -G.ENTER,.EXIT+20)             Press command letter for help on specific command, or                    ESCape key to return to main help menu.Å             Press command letter for help on speci                                  Hex ValuesThe Hex command allows arithmetic operations in differentbases as well as listing of the symbol table:    Ha,b        Displays sum (a+b) and difference (a-b) in                hexadecimal    Ha          Displays result in up to four forms:                   hex   #decimal  'char'  .sym                "char" is only displayed if it exists                "sym" is the symbolic value, if any    H           Displays a list of all symbols; paginated    -H          Same, except no pauses at page break(NOTE: "a" and "b" are any complex expressions.)             Press command letter for help on specific command, or                    ESCape key to return to main help menu.Å             Press command letter                                  Input LineInitializes default buffer at 0080H, default FCB at 005CH, anddefault secondary FCB at 006CH to the string entered:        Istring(Ex: I FOO.COM FOO.SYM      ITEST.COM      I* TEST.SYM)The primary filename is used by Read as the program to debug;the secondary filename is used by Read as the symbol table.             Press command letter for help on specific command, or                    ESCape key to return to main help menu.Å             Press                                Full Screen TraceFull trace mode is a powerful method to step through a program.There are four parts to the screen: memory display (4 lines),register display (2 lines), instruction display (16 lines), andcommand line area (2 lines).  The memory area may be empty if thememory block (K) is not enabled.  Other symbols include:        >       Instruction at which registers are displayed.        =       Current program counter        ?:      Full screen command promptDebugZ retains up to 12 instructions of registers with a 4instruction look-ahead; the memory window is updated automatically.               Press SPACE bar for more Full Screen Trace help,                command letter for help on specific command, or                    ESCape key to return to main help menu.                               Full Screen Trace                                    (cont.)Non-execution control commands include:        < or ,  Move register pointer backwards        > or .  Move register pointer forwards        =       Set program counter        K       Set memory block view address (enable display)        +       Scroll memory view window forward by 32 bytes        -       Scroll memory view window backwards by 32 bytes        H       Expression evaluation (display at bottom)        ?       Help        Q or X  Quit full-screen trace mode (return to '#' prompt)               Press SPACE bar for more Full Screen Trace help,                command letter for help on specific command, or                    ESCape key to return to main help menu.                               Full Screen Trace                                    (cont.)Program execution instructions are:        space   Execute one instruction; no trace of CALLs        return  Execute one instruction; follow CALLs        1 to 5  Execute at 1 to 5 instructions/second; no trace                of CALLs; any key halts        6 to 0  Execute at 1 (6) to 5 (0) instructions/second;                follow CALLs; any key halts        Ga      Continue execution until address "a"; no display                of intermediate registers/instructions.        Ga,b    Same, with an additional breakpoint at "b".             Press command letter for help on specific command, or                    ESCape key to return to main help menu.Å             Press command letter for help on spec                               Memory View BlocKSets initial bounds of memory block to view, if any, duringfull-screen trace (J) of a program.        Ka      Sets the memory block to view from address                "a" for up to 64 locations.        KWa     Same, except view words rather than bytes.        -K      Disables memory block view.Only the starting address is entered.  DebugZ will round tonearest 16-byte boundary and display 64 bytes of memory.             Press command letter for help on specific command, or                    ESCape key to return to main help menu.Å             Press command letter for                                   List CodeList assembly code including labels and symbols:    Lb          List disassembled code starting at "b"                for 12 lines.    Lb,e        List disassembled code starting at "b" and                ending at "e"; pauses for page breaks.    L           List disassembled code starting after last                disassembled or traced address.    L,e         Same, except ending at "e".    -L...       Same as above commands, except that                pagination is disabled.             Press command letter for help on specific command, or                    ESCape key to return to main help menu.Å             Press command letter for help on specific command, or                    ESCape key t                                  Move MemoryMove block of memory to another location:        Ms,e,d          Move data from locations "s" through                        "e" to location "d" (through "d+e-s").A head-to-tail or tail-to-head move is performed as necessaryto avoid memory overlap collision.  Note that the source memorylocations from "s" through "e" are not altered PROVIDED thedestination block does not overwrite the source block duringthe copy operation.             Press command letter for help on specific command, or                    ESCape key to return to main help menu.Å             Press command                                Next AddressesDebugZ displays the memory usage when the command        Nis entered.  Address ranges utilized are displayed for:        Prog            Range occupied by program under test,                        if loaded        Free            Free memory range        Symbols         Symbol storage, if any        DebugZ          DebugZ debugger program             Press command letter for help on specific command, or                    ESCape key to return to main help menu.Å             Press command letter for help on specific command, or                    ESCape key to return t                                  Pass PointsA "pass point" is a program address to monitor during execution.Each pass point has a counter with a value from 1 to 255indicating the number of times this address has been reached.When the counter reaches 1, it stays there; any counters with avalue of 1 are treated as "breakpoints".  Program executionstops at any breakpoint.  Up to 8 passpoints are allowed.        Pp      Enter passpoint address "p";                pass count defaults to 1.        Pp,c    Same, except sets pass count to "c".                 Press SPACE bar for more Pass Point help, or                command letter for help on specific command, or                    ESCape key to return to main help menu.                                  Pass Points                                    (cont.)When hitting an active pass point during execution, the registersare displayed and the pass count, address, and symbol value (ifany) are shown:        count PASS address .sym        8080 registers; instruction        Z80 registers (if enabled)Display of pass points can be disabled during trace (T), untrace(U), and execution (G).  Again, execution stops when the pass pointis or becomes a value of one.                 Press SPACE bar for more Pass Point help, or                command letter for help on specific command, or                    ESCape key to return to main help menu.                                  Pass Points                                    (cont.)The current list of pass points can be displayed by entering:        PA list of the pass points is given in the follwing form:        pass-value   pass-address  (symbol location, if any)Pass points can be deleted by entering:        -Pa     where "a" is the pass address to remove        -P      which deletes ALL pass points             Press command letter for help on specific command, or                    ESCape key to return to main help menu.Å             Press command letter for help on specific c                                  Query PortThe Query command allows one to read and/or modify the value at agiven port.  A full 16-bit port value is accepted and used forboth input and output.  The format is:        QIp     Display the value input from port "p".        QI      Display the value input from port; the last                port number "p" referenced is automatically used.        QOp,v   Output 8-bit value "v" to port "p".             Press command letter for help on specific command, or                    ESCape key to return to main help menu.Å             Press command letter for help on specific com                                 Read File(s)The Read command loads a file into memory for debugging and/orreads a symbol table into DebugZ.  The files are specifiedusing the Input command.  The format for the Read command is:        R       Read executable file (if specified by Input)                into memory starting at 0100H.  Read symbol                file, if specified.        Ra      Same, except Read executable file into memory                at location "a" PLUS 0100H.  For example, "R200"                reads the file in at location 0300H.  The offset                is ignored when reading the symbol file, if any.             Press command letter for help on specific command, or                    ESCape key to return to main help menu.Å             Press command letter for help on specific command, or                    ESCape key to return to main hel                                  Set MemorySet memory alters the memory contents.  Commands are:        Sa      Substitute bytes starting from location "a".        SWa     Substitute words starting from location "a".In both cases, DebugZ prompts with the address and either 8-bitor 16-bit value at that location.  One can either enter a new8-bit (16-bit) value, press RETURN on a blank line to skip to thenext location, or enter "." following by RETURN to quit.Set can also be used to assign ASCII strings by beginning the linewith double-quotes (").  DebugZ strips the leading quote beforesetting memory to the string.             Press command letter for help on specific command, or                    ESCape key to return to main help menu.Å                                    Trace ExecutionTrace execution starting from current PC for the specified numberof instructions.  The flags and registers are displayed after eachinstruction.  Subroutines (CALLs) are optionally traced.        T       Trace execution for one instruction including                CALL statements.        Tn      Same, except trace for "n" instructions.        TW      Trace one instruction, do NOT trace CALLs.        TWn     Same, except trace for "n" instructions.Note that tracing to addresses < 0100H may be disabled if the-ETRACE command has been specified (or is the default).             Press command letter for help on specific command, or                    ESCape key to return to main help menu.Å                                          Untrace ExecutionTrace execution starting from current PC for the specified numberof instructions.  The flags and registers are NOT displayedafter each instruction.  Subroutines (CALLs) are optionally traced.        U       Trace execution for one instruction including                CALL statements. Display Pass points.        Un      Same, but trace for "n" instructions.        UW      Trace one instruction, do NOT trace CALLs.        UWn     Same, but trace for "n" instructions.        -U..    Same, except do NOT display pass points.Note that tracing to addresses < 0100H may be disabled if the-ETRACE command has been specified (or is the default).             Press command letter for help on specific command, or                    ESCape key to return to main help menu.Å             Press command letter for help on specific command,                                 Verify MemoryVerify (compare) block of memory at one location to another:        Vs,e,d          Verify data at locations "s" through                        "e" against location "d" (through "d+e-s");                        paginates output.        -Vs,e,d         Same except no pagination.Any differences between the blocks are printed as:        src-addr  src-value    dst-addr  dst-value             Press command letter for help on specific command, or                    ESCape key to return to main help menu.Å             Press command letter for help on specific command, or                                eXamine Register ContentsThe eXamine command can list the contents of all registers (andthe current instruction) or alter any of them.  Valid commands are:        X       Displays the current register contents, flags,                and instruction.        Xr      Change register contents where "r" can be: "A",                "B" for BC, "D" for DE, "H" for HL, "P" for PC,                "S" for SP, "X" for IX, and "Y" for IY.        Xr'     Adding the "'" instructs DebugZ to alter the                "backside" Z80 registers.  Valid "r" include "A",                "B", "D", and "H".          Press SPACE bar for more help on eXamine Register Contents,                command letter for help on specific command, or                    ESCape key to return to main help menu.                           eXamine Register Contents                                    (cont.)Changing the register value involves entering the new 16-bitvalue (8-bit for A register).  An empty line leaves the valueunaltered.  Altering the flags is done by entering:        Xf      Change flags: (C)arry, (Z)ero, (M)inus, (E)ven                parity, (S)ubtract, and BCD hal(F) carry.        Xf'     Same, except alter the "backside" Z80 flags.Entering a value of "1" sets the flag, "0" resets it.Note that although any register or flag can be changed, display of the "backside" Z80 registers may optionally be suppressed (E).             Press command letter for help on specific command, or                    ESCape key to return to main help menu.Å             Press command letter for help on specific command, or                                 Search MemorySearch allows searching for any sequence of bytes or characters,including wild cards; up to 63-byte match strings may be searched.        YBs,f   Sets bound of search between address "s" and                address "f", inclusive.        Yq      Search for sequence "q" starting from address "s".        YWq     Same, except search using 16-bit word values.        Y       Continue search for last sequence "q" starting                from current address."q" is of the form:     value1,value2,....,value-n   where "value" is a byte, word, or string in quotes ("").  Aquestion mark ("?") used anywhere is a wildcard that matches ANY byte.             Press command letter for help on specific command, or                    ESCape key to return to main help menu.Å             Press command letter for help on specific command, or  