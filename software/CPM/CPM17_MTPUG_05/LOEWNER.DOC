\cmd`
`formfeed off,draft,lm5,rm70,pl72
`tm2,bm5


       `out14,27,69`MT+ Pascal Library Extension :
       `out14`==============================
`out27,70`


procedure `out14`cpos`out20`(zeile,spalte);
	Cursor Positionierung


procedure `out14`home`out20`;
	Cursor wird in die linke obere Ecke gesetzt


procedure `out14`cls`out20`;
	L|scht den Bildschirm und setzt den Cursor in die linke obere
	Ecke


procedure `out14`ceop`out20`;
	L|scht den Bildschirm bis zum Ende, inkl. Cursor Position


procedure `out14`ctop`out20`;
	L|scht den Bildschirm bis zum Anfang, inkl. Cursor Position


procedure `out14`ceol`out20`;
	L|scht die Zeile bis zum Ende, inkl. Cursor Position


procedure `out14`il`out20`;
	F}gt eine Zeile in H|he der Cursor-Position ein, dabei werden
	die nachfolgenden Zeilen um eine Zeile nach unten ger}ckt und
	eventuell dabei die letzte Zeile gel|scht


procedure `out14`dl`out20`;
	L|scht die Zeile in der der Cursor ist und r}ckt die
	nachfolgenden Zeilen auf


procedure `out14`dc`out20`;
	L|scht das Zeichen, auf dem der Cursor steht und l{~t den Rest
	der Zeile von rechts aufr}cken


procedure `out14`savec`out20`;
	Das Terminal merkt sich die Cursorposition, um sp{ter durch
	ein "_restc_" an diese Position wieder zur}ckzukehren


procedure `out14`restc`out20`;
	Das Terminal positioniert den Cursor an die Stelle auf dem
	Bildschirm, die sich durch die "procedure _savec_" gemerkt
	wurde


procedure `out14`erasel`out20`;
	L|scht die gesamte Zeile, in der der Cursor steht, ohne
	aufr}cken


`np`procedure `out14`kboff`out20`;
	Schaltet die Tastatur aus, so da~ keine weitere Eingabe mehr
	m|glich ist (siehe kbon)


procedure `out14`kbon`out20`;
	Schaltet die Tastatur nach einem "_kboff_" wieder ein


procedure `out14`ebl`out20`;
	L|scht die Zeile vom Beginn der Zeile bis zum Cursor (inkl.)


procedure `out14`cuoff`out20`;
	Schaltet den Cursor aus


procedure `out14`cuon`out20`;
	Schaltet den Cursor wieder ein


procedure `out14`on25`out20`;
	Erm|glicht den Zugang zur Status- (25.) Zeile


procedure `out14`off25`out20`;
	L|scht die 25. Zeile (Statuszeile) und ein weiterer Zugriff
	auf diese ist bis auf ein weiteres "_on25_" Kommando nicht
	m|glich


procedure `out14`time`out20`(var x:string);
	Die Variable "x" bekommt einen String der L{nge 8 in der Form
	"hh:mm:ss" zugewiesen


procedure `out14`date`out20`(var x:string);
	Die Variable "x" bekommt einen String der L{nge 10 in der Form
	"dd.mm.19yy" zugewiesen


procedure `out14`day`out20`(var x:string);
	Die Variable "x" bekommt einen String variabler L{nge mit dem
	deutschen Text des Wochentages zugewiesen


procedure `out14`ic`out20`;
	F}gt ein Zeichen an der Cursorposition ein und l{~t den rest
	der Zeile (inkl. Cursorpos.) nach rechts r}cken. Evtl. in der
	80. Spalte vorhandene Zeichen gehen verloren


procedure `out14`xic`out20`;
	Schaltet den "_ic_" -modus aus;


procedure `out14`revon`out20`;
	Von nun an werden die Zeichen 'invertiert' (wei~ auf schwarz)
	geschrieben


procedure `out14`revoff`out20`;
	Die Zeichen werden nun nach einem "_revon_" wieder normal
	(wei~ auf schwarz) geschrieben


cedure `out14`revoff`out20`;
	Die Zeichen werden nun nach einem "_revon_" wieder norm