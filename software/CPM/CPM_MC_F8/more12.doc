
                              MORE
                         Text File Pager
                           Version 1.2

                          Gene Pizzetta
                       September 12, 1992
              Original Program by Eugene H. Mallory


MORE pages text files and optionally numbers lines.  It also 
offers several forms of input and output, including ambiguous 
filenames, redirection, and piping.  The ZCPR3 program error flag 
is set on error.  MORE should run fine under vanilla CP/M, but 
piping is available only under ZCPR3.

USAGE:

     MORE {dir:}afn {/options}

If no DIR or DU specification is given, the current directory is 
assumed.  Standard output is to the console.  Output may be 
redirected, however, to a file or to another program.  Input is 
not accepted from the keyboard, but may include command line 
ambiguous filenames, redirected input, and input from another 
program.  See Redirected Input and Output, below.

While processing files from a command line filespec, the name of 
the current file is displayed in the "more" message.  Redirected 
input is treated as a character stream, so no filename is 
displayed.

If input is from both a command line filespec and redirected 
input, all files matching the command line filespec will be 
processed first, followed by the redirected input stream.

When outputting to the console, MORE pauses every 22 lines and 
waits for a key to be pressed.  If output is redirected, MORE 
instead inserts a form feed character every 22 lines.  The latter 
can be useful to page output before sending it to a printer.  Use 
the L option (see below) to change the number of lines per page.

OPTIONS:  Options must be preceded by a slash character "/".  
Multiple options may be given after a single slash, or each 
option may stand alone.  They may appear in any order anywhere on 
the command line.

     Ln   Lines.  Input is paged every n lines.  The default is 
          22 for normal CRT screens.  To disable paging, enter an 
          ridiculously large number that exceeds the number of 
          lines to be read.

     N    Numbering.  Each line of input is preceded by a 
          sequential line number on output.

EXAMPLES:

     more *.h
          Displays all files with filetype H to the console 
          screen in alphabetical order, pausing every 22 lines.

     more /l58 <myfile.txt >myfile.prn
          Reads MYFILE.TXT, inserts a form feed character every 
          58 lines, and outputs the result to MYFILE.PRN.

REDIRECTED INPUT AND OUTPUT:  MORE uses the DIO package 
distributed with BDS C, but the package has been heavily modified 
to add additional features.  MORE does not support keyboard 
input.

     >{dir:}fn      sends output to the given file.  An existing 
                    file with same name will be overwritten.

     +{dir:}fn      sends output to the given file (like ">fn" 
                    above), but also echos it to the console.

     >>{dir:}fn     sends output to the given file, appending it 
                    to the file's current contents.  If the file 
                    does not exist, it will be created.

     +>{dir:}fn     sends output to the given file, appending it 
                    to the file's current contents (like ">>fn" 
                    above), but also echos it to the console.

     >LST:          sends output to the printer (CP/M LST).  
                    ">>LST:" is also accepted and works the same.

     +LST:          sends output to the printer (like ">LST:" 
                    above), but also echos it to the console.  
                    "+>LST:" is also accepted and works the same.

     >NUL:          sends output to a null device (the "bit 
                    bucket").  ">>NUL:" is also accepted and 
                    works the same.  Not particularly useful for 
                    MORE, but it's there.
     
     +NUL:          sends output to a null device (like ">NUL:" 
                    above), but also echos it to the console.  
                    "+>NUL:" is also accepted and works the same.

     <{dir:}fn      uses the contents of the given file as input 
                    for MORE.

     |cmd2          pipe MORE's output to the input of cmd2, 
                    which must be capable of redirected input.  
                    MORE can pipe to another program, and can 
                    receive piped input from another program.

No spaces are allowed between the redirection flags ( ">", "+", 
"<", and "|") and the following target file or device name.

A pipe should be the last parameter given to MORE because the 
command line is not scanned beyond that point.  cmd2 will receive 
MORE's output via a file named TEMPIN.$$$.  That file is deleted 
when cmd2 is finished with it.

Piping works by loading the entire command line beyond the pipe 
(after inserting "<TEMPIN.$$$") into ZCPR3's multiple command 
line buffer, appending any commands that are already in the 
buffer.  This method means that cmd2 is actually executed by the 
command processor, allowing the usual ZCPR3 services to which you 
have become accustomed, including path searching, use of an 
extended command processor such as ARUNZ or LX, and the ability 
to use aliases to pipe to programs really not capable of 
receiving redirected input.

Since it uses ZCPR services, piping is not available under 
vanilla CP/M.  In that case, however, MORE will gracefully exit 
with a message.

ERRORS:  The ZCPR3 program error flag is set to standard values 
on error.  The following error codes are used by MORE:

     19   invalid command line option
     15   command line overflow (piping)
     11   disk or directory full (redirected output)
     10   source file not found (redirected input)
      4   other errors

If a file given on the command line cannot be found, MORE merely 
exits quietly without setting the error flag.

HISTORY:

Version 1.2 -- September 12, 1992 -- Gene Pizzetta
     Re-released after correcting bug in DIO package.

Version 1.1 -- August 15, 1992 -- Gene Pizzetta
     Modified to compile under BDS C Z-version 2.0.  Eliminated 
     terminal dependences.  Added form feed paging for redirected 
     output.  Sets ZCPR3 program error flag to standard Z-System 
     values.  Expanded usage message.  Uses slash instead of dash 
     as option flag and allows multiple options after a single 
     slash per Z-System standards.  Uses new DIO package with 
     more output options.  Most messages modified to more closely 
     resemble the Unix System V version on the AT&T 3B15 
     computer I use regularly.

Version 1.0 -- Copyright 1983 Eugene H. Mallory
     Part of his Van Nuyes tool kit.


Please report bugs as soon as possible, suggestions at your 
leisure:

     Gene Pizzetta
     481 Revere St.
     Revere, MA 02151

     Voice:  (617) 284-0891
     Newton Centre Z-Node:  (617) 965-7259
     Ladera Z-Node Central:  (310) 670-9465
